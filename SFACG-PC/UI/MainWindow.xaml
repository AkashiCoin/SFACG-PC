<Controls:MetroWindow
    x:Class="SFACGPC.UI.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    xmlns:converters="clr-namespace:MahApps.Metro.IconPacks.Converter;assembly=MahApps.Metro.IconPacks.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:SFACGPC.UI"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:SFACGPC.Data.ViewModel"
    Title="{DynamicResource i18n.MainTitle}"
    Width="719"
    Height="596"
    Background="{DynamicResource MaterialDesignPaper}"
    BorderThickness="0"
    GlowBrush="Black"
    ResizeMode="CanResizeWithGrip"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Controls:MetroWindow.DataContext>
        <viewModels:HamburgerMenuViewModel />
    </Controls:MetroWindow.DataContext>

    <Controls:MetroWindow.LeftWindowCommands>
        <Controls:WindowCommands ShowSeparators="False">
            <Button
                x:Name="GoBackButton"
                Width="{Binding ElementName=HamburgerMenuControl, Path=CompactPaneLength}"
                AutomationProperties.Name="Go back"
                Click="GoBack_OnClick">
                <Controls:FontIcon
                    AutomationProperties.Name="Go back icon"
                    FontSize="14"
                    Glyph="&#xE72B;" />
            </Button>
        </Controls:WindowCommands>
    </Controls:MetroWindow.LeftWindowCommands>

    <Controls:MetroWindow.Resources>

        <DataTemplate x:Key="MenuItemTemplate" DataType="{x:Type viewModels:HamburgerMenuPageItem}">
            <Grid Height="48">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Controls:HamburgerMenu}}, Path=CompactPaneLength, Mode=OneWay}" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <ContentControl
                    Grid.Column="0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Content="{Binding Icon}"
                    Focusable="False" />
                <TextBlock
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Text="{Binding Label}" />
            </Grid>
        </DataTemplate>

        <Style BasedOn="{StaticResource {x:Type Frame}}" TargetType="{x:Type Frame}">
            <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent4}" />
            <Setter Property="ClipToBounds" Value="True" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Controls:TransitioningContentControl
                            Content="{Binding}"
                            RestartTransitionOnContentChange="True"
                            Transition="Custom">
                            <Controls:TransitioningContentControl.CustomVisualStates>
                                <VisualState x:Name="CustomTransition">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:00.150" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="CurrentContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="200" />
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.1, 0.9, 0.2, 1"
                                                KeyTime="00:00:00.300"
                                                Value="0" />
                                        </DoubleAnimationUsingKeyFrames>

                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="PreviousContentPresentationSite"
                                            Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </Controls:TransitioningContentControl.CustomVisualStates>
                        </Controls:TransitioningContentControl>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Controls:MetroWindow.Resources>

    <Controls:HamburgerMenu
        x:Name="HamburgerMenuControl"
        DisplayMode="CompactInline"
        IsPaneOpen="False"
        ItemInvoked="HamburgerMenuControl_OnItemInvoked"
        ItemTemplate="{StaticResource MenuItemTemplate}"
        ItemsSource="{Binding Menu}"
        OptionsItemTemplate="{StaticResource MenuItemTemplate}"
        OptionsItemsSource="{Binding OptionsMenu}" />
</Controls:MetroWindow>
